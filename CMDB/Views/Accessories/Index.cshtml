@model List< CMDB.Models.DBEntities.Accessories>
@using CMDB.ViewModels

@{
	var pager = (PagerViewModel)ViewData["Pager"];
}

<h1>Accessories</h1>
<div class="d-flex justify-content-between mb-3">
  <button asp-action="Create" asp-controller="Accessories" class="btn btn-primary mb-3">Create Accessory</button>
  @Html.Partial("_PageSizeForm", pager)
</div>

	<table id="animated-table" class="table table-responsive table-hover table-bordered">
		<thead>
			<tr class="table-active">
				<th>AkcesoriumID</th>
				<th>Action</th>
			</tr>
		</thead>
		<tbody>
			@if (Model != null && Model.Any())
			{
				@foreach (var accessory in Model)
				{
					<tr>
						<td>@accessory.AccessoryID</td>

						<td>
							<div class="btnbtn-group btn-group-sm">
								<a asp-controller="Accessories" asp-action="Edit" asp-route-id="@accessory.AccessoryID"
									class="btn btn-primary">Edit</a>
								<a asp-controller="Accessories" asp-action="Details" asp-route-id="@accessory.AccessoryID"
									class="btn btn-primary">Details</a>
								<a asp-controller="Accessories" asp-action="Delete" asp-route-id="@accessory.AccessoryID"
									class="btn btn-danger">Delete</a>
							</div>
						</td>
					</tr>
				}
			}
			else
			{
				<tr>
					<td colspan="6">
						<div>
							No Accessories available at this moment!
						</div>
					</td>
				</tr>
			}
		</tbody>
	</table>

<!-- Render partial pager -->
@Html.Partial("_Pager", pager)